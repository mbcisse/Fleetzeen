{
    "name": {
        "type": "char",
        "string": "Name"
    },
    "description": {
        "type": "text",
        "string": "Vehicle Description"
    },
    "active": {
        "type": "boolean",
        "string": "Active"
    },
    "company_id": {
        "type": "many2one",
        "string": "Company"
    },
    "currency_id": {
        "type": "many2one",
        "string": "Currency"
    },
    "license_plate": {
        "type": "char",
        "help": "License plate number of the vehicle (i = plate number for a car)",
        "string": "License Plate"
    },
    "vin_sn": {
        "type": "char",
        "help": "Unique number written on the vehicle motor (VIN/SN number)",
        "string": "Chassis Number"
    },
    "driver_id": {
        "type": "many2one",
        "help": "Driver of the vehicle",
        "string": "Driver"
    },
    "future_driver_id": {
        "type": "many2one",
        "help": "Next Driver of the vehicle",
        "string": "Future Driver"
    },
    "model_id": {
        "type": "many2one",
        "help": "Model of the vehicle",
        "string": "Model"
    },
    "brand_id": {
        "type": "many2one",
        "help": "Manufacturer of the vehicle",
        "string": "Brand"
    },
    "log_drivers": {
        "type": "one2many",
        "string": "Assignment Logs"
    },
    "log_services": {
        "type": "one2many",
        "string": "Services Logs"
    },
    "log_contracts": {
        "type": "one2many",
        "string": "Contracts"
    },
    "contract_count": {
        "type": "integer",
        "string": "Contract Count"
    },
    "service_count": {
        "type": "integer",
        "string": "Services"
    },
    "odometer_count": {
        "type": "integer",
        "string": "Odometer"
    },
    "history_count": {
        "type": "integer",
        "string": "Drivers History Count"
    },
    "next_assignation_date": {
        "type": "date",
        "help": "This is the date at which the car will be available, if not set it means available instantly",
        "string": "Assignment Date"
    },
    "acquisition_date": {
        "type": "date",
        "help": "Date when the vehicle has been immatriculated",
        "string": "Immatriculation Date"
    },
    "first_contract_date": {
        "type": "date",
        "string": "First Contract Date"
    },
    "color": {
        "type": "char",
        "help": "Color of the vehicle",
        "string": "Color"
    },
    "state_id": {
        "type": "many2one",
        "help": "Current state of the vehicle",
        "string": "State"
    },
    "location": {
        "type": "char",
        "help": "Location of the vehicle (garage, ...)",
        "string": "Location"
    },
    "seats": {
        "type": "integer",
        "help": "Number of seats of the vehicle",
        "string": "Seats Number"
    },
    "model_year": {
        "type": "char",
        "help": "Year of the model",
        "string": "Model Year"
    },
    "doors": {
        "type": "integer",
        "help": "Number of doors of the vehicle",
        "string": "Doors Number"
    },
    "tag_ids": {
        "type": "many2many",
        "string": "Tags"
    },
    "odometer": {
        "type": "float",
        "help": "Odometer measure of the vehicle at the moment of this log",
        "string": "Last Odometer"
    },
    "odometer_unit": {
        "type": "selection",
        "help": "Unit of the odometer ",
        "string": "Odometer Unit"
    },
    "transmission": {
        "type": "selection",
        "help": "Transmission Used by the vehicle",
        "string": "Transmission"
    },
    "horsepower": {
        "type": "integer",
        "string": "Horsepower"
    },
    "horsepower_tax": {
        "type": "float",
        "string": "Horsepower Taxation"
    },
    "power": {
        "type": "integer",
        "help": "Power in kW of the vehicle",
        "string": "Power"
    },
    "co2": {
        "type": "float",
        "help": "CO2 emissions of the vehicle",
        "string": "CO2 Emissions"
    },
    "image_128": {
        "type": "binary",
        "string": "Logo"
    },
    "contract_renewal_due_soon": {
        "type": "boolean",
        "string": "Has Contracts to renew"
    },
    "contract_renewal_overdue": {
        "type": "boolean",
        "string": "Has Contracts Overdue"
    },
    "contract_renewal_name": {
        "type": "text",
        "string": "Name of contract to renew soon"
    },
    "contract_renewal_total": {
        "type": "text",
        "string": "Total of contracts due or overdue minus one"
    },
    "car_value": {
        "type": "float",
        "help": "Value of the bought vehicle",
        "string": "Catalog Value (VAT Incl.)"
    },
    "net_car_value": {
        "type": "float",
        "help": "Purchase value of the vehicle",
        "string": "Purchase Value"
    },
    "residual_value": {
        "type": "float",
        "string": "Residual Value"
    },
    "plan_to_change_car": {
        "type": "boolean",
        "string": "Plan To Change Car"
    },
    "vehicle_type": {
        "type": "selection",
        "string": "Vehicle Type"
    },
    "mobility_card": {
        "type": "char",
        "string": "Mobility Card"
    },
    "bill_count": {
        "type": "integer",
        "string": "Bills Count"
    },
    "account_move_ids": {
        "type": "one2many",
        "string": "Account Move"
    },
    "service_date": {
        "type": "date",
        "string": "Service Date"
    },
    "last_stamp_date": {
        "type": "date",
        "string": "Last Stamp Date"
    },
    "fleet_in": {
        "type": "date",
        "string": "Fleet Date In"
    },
    "fleet_out": {
        "type": "date",
        "string": "Fleet Date Out"
    },
    "equipment_date": {
        "type": "date",
        "string": "Equipment Date"
    },
    "assignment_type": {
        "type": "many2one",
        "string": "Assignment Type"
    },
    "driver_no": {
        "type": "char",
        "string": "Driver Number"
    },
    "shade": {
        "type": "char",
        "string": "Shade"
    },
    "technical_type": {
        "type": "many2one",
        "string": "Technical Type"
    },
    "consumption": {
        "type": "float",
        "string": "Consumption"
    },
    "serial_no": {
        "type": "char",
        "string": "Serial Number"
    },
    "finish": {
        "type": "char",
        "string": "Finish"
    },
    "inside": {
        "type": "char",
        "string": "Inside"
    },
    "condition": {
        "type": "many2one",
        "string": "Vehicle Condition"
    },
    "gross_car_value": {
        "type": "float",
        "string": "Purchase Equiped Value"
    },
    "document_date": {
        "type": "date",
        "string": "Document Date"
    },
    "subject_to_vat": {
        "type": "boolean",
        "string": "Subject To VAT"
    },
    "technical_inspection_date": {
        "type": "date",
        "string": "Technical Inspection Date"
    },
    "fuel_type": {
        "type": "many2one",
        "string": "Fuel Type"
    },
    "manager_id": {
        "type": "many2one",
        "string": "Manager"
    },
    "relay_vehicle": {
        "type": "selection",
        "string": "Relay vehicle state"
    },
    "parking_no": {
        "type": "char",
        "string": "Parking Number"
    },
    "radio_code": {
        "type": "char",
        "string": "Radio Code"
    },
    "product_ids": {
        "type": "one2many",
        "string": "Article"
    },
    "product_count": {
        "type": "integer",
        "string": "Vehicle relay"
    },
    "activity_ids": {
        "type": "one2many",
        "string": "Activities"
    },
    "activity_state": {
        "type": "selection",
        "help": "Status based on activities\nOverdue: Due date is already passed\nToday: Activity date is today\nPlanned: Future activities.",
        "string": "Activity State"
    },
    "activity_user_id": {
        "type": "many2one",
        "string": "Responsible User"
    },
    "activity_type_id": {
        "type": "many2one",
        "string": "Next Activity Type"
    },
    "activity_type_icon": {
        "type": "char",
        "help": "Font awesome icon e.g. fa-tasks",
        "string": "Activity Type Icon"
    },
    "activity_date_deadline": {
        "type": "date",
        "string": "Next Activity Deadline"
    },
    "my_activity_date_deadline": {
        "type": "date",
        "string": "My Activity Deadline"
    },
    "activity_summary": {
        "type": "char",
        "string": "Next Activity Summary"
    },
    "activity_exception_decoration": {
        "type": "selection",
        "help": "Type of the exception activity on record.",
        "string": "Activity Exception Decoration"
    },
    "activity_exception_icon": {
        "type": "char",
        "help": "Icon to indicate an exception activity.",
        "string": "Icon"
    },
    "message_is_follower": {
        "type": "boolean",
        "string": "Is Follower"
    },
    "message_follower_ids": {
        "type": "one2many",
        "string": "Followers"
    },
    "message_partner_ids": {
        "type": "many2many",
        "string": "Followers (Partners)"
    },
    "message_channel_ids": {
        "type": "many2many",
        "string": "Followers (Channels)"
    },
    "message_ids": {
        "type": "one2many",
        "string": "Messages"
    },
    "message_unread": {
        "type": "boolean",
        "help": "If checked, new messages require your attention.",
        "string": "Unread Messages"
    },
    "message_unread_counter": {
        "type": "integer",
        "help": "Number of unread messages",
        "string": "Unread Messages Counter"
    },
    "message_needaction": {
        "type": "boolean",
        "help": "If checked, new messages require your attention.",
        "string": "Action Needed"
    },
    "message_needaction_counter": {
        "type": "integer",
        "help": "Number of messages which requires an action",
        "string": "Number of Actions"
    },
    "message_has_error": {
        "type": "boolean",
        "help": "If checked, some messages have a delivery error.",
        "string": "Message Delivery error"
    },
    "message_has_error_counter": {
        "type": "integer",
        "help": "Number of messages with delivery error",
        "string": "Number of errors"
    },
    "message_attachment_count": {
        "type": "integer",
        "string": "Attachment Count"
    },
    "message_main_attachment_id": {
        "type": "many2one",
        "string": "Main Attachment"
    },
    "website_message_ids": {
        "type": "one2many",
        "help": "Website communication history",
        "string": "Website Messages"
    },
    "message_has_sms_error": {
        "type": "boolean",
        "help": "If checked, some messages have a delivery error.",
        "string": "SMS Delivery error"
    },
    "id": {
        "type": "integer",
        "string": "ID"
    },
    "display_name": {
        "type": "char",
        "string": "Display Name"
    },
    "create_uid": {
        "type": "many2one",
        "string": "Created by"
    },
    "create_date": {
        "type": "datetime",
        "string": "Created on"
    },
    "write_uid": {
        "type": "many2one",
        "string": "Last Updated by"
    },
    "write_date": {
        "type": "datetime",
        "string": "Last Updated on"
    },
    "__last_update": {
        "type": "datetime",
        "string": "Last Modified on"
    },
    "x_studio_x_lastupdatedate_flow_vehicule": {
        "type": "datetime",
        "string": "x_lastupdatedate_flow_vehicule"
    }
}