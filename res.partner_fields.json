{
    "display_name": {
        "type": "char",
        "string": "Display Name"
    },
    "date": {
        "type": "date",
        "string": "Date"
    },
    "title": {
        "type": "many2one",
        "string": "Title"
    },
    "parent_id": {
        "type": "many2one",
        "string": "Related Company"
    },
    "parent_name": {
        "type": "char",
        "string": "Parent name"
    },
    "ref": {
        "type": "char",
        "string": "Reference"
    },
    "lang": {
        "type": "selection",
        "help": "All the emails and documents sent to this contact will be translated in this language.",
        "string": "Language"
    },
    "active_lang_count": {
        "type": "integer",
        "string": "Active Lang Count"
    },
    "tz": {
        "type": "selection",
        "help": "When printing documents and exporting/importing data, time values are computed according to this timezone.\nIf the timezone is not set, UTC (Coordinated Universal Time) is used.\nAnywhere else, time values are computed according to the time offset of your web client.",
        "string": "Timezone"
    },
    "tz_offset": {
        "type": "char",
        "string": "Timezone offset"
    },
    "vat": {
        "type": "char",
        "help": "The Tax Identification Number. Complete it if the contact is subjected to government taxes. Used in some legal statements.",
        "string": "Tax ID"
    },
    "same_vat_partner_id": {
        "type": "many2one",
        "string": "Partner with same Tax ID"
    },
    "bank_ids": {
        "type": "one2many",
        "string": "Banks"
    },
    "website": {
        "type": "char",
        "string": "Website Link"
    },
    "comment": {
        "type": "text",
        "string": "Notes"
    },
    "category_id": {
        "type": "many2many",
        "string": "Tags"
    },
    "credit_limit": {
        "type": "float",
        "string": "Credit Limit"
    },
    "active": {
        "type": "boolean",
        "string": "Active"
    },
    "employee": {
        "type": "boolean",
        "help": "Check this box if this contact is an Employee.",
        "string": "Employee"
    },
    "function": {
        "type": "char",
        "string": "Job Position"
    },
    "type": {
        "type": "selection",
        "help": "Invoice & Delivery addresses are used in sales orders. Private addresses are only visible by authorized users.",
        "string": "Address Type"
    },
    "street": {
        "type": "char",
        "string": "Street"
    },
    "street2": {
        "type": "char",
        "string": "Street2"
    },
    "zip": {
        "type": "char",
        "string": "Zip"
    },
    "city": {
        "type": "char",
        "string": "City"
    },
    "state_id": {
        "type": "many2one",
        "string": "State"
    },
    "country_id": {
        "type": "many2one",
        "string": "Country"
    },
    "partner_latitude": {
        "type": "float",
        "string": "Geo Latitude"
    },
    "partner_longitude": {
        "type": "float",
        "string": "Geo Longitude"
    },
    "email_formatted": {
        "type": "char",
        "help": "Format email address \"Name <email@domain>\"",
        "string": "Formatted Email"
    },
    "mobile": {
        "type": "char",
        "string": "Mobile"
    },
    "is_company": {
        "type": "boolean",
        "help": "Check if the contact is a company, otherwise it is a person",
        "string": "Is a Company"
    },
    "industry_id": {
        "type": "many2one",
        "string": "Industry"
    },
    "company_type": {
        "type": "selection",
        "string": "Company Type"
    },
    "company_id": {
        "type": "many2one",
        "string": "Company"
    },
    "color": {
        "type": "integer",
        "string": "Color Index"
    },
    "user_ids": {
        "type": "one2many",
        "string": "Users"
    },
    "partner_share": {
        "type": "boolean",
        "help": "Either customer (not a user), either shared user. Indicated the current partner is a customer without access or with a limited access created for sharing data.",
        "string": "Share Partner"
    },
    "contact_address": {
        "type": "char",
        "string": "Complete Address"
    },
    "commercial_partner_id": {
        "type": "many2one",
        "string": "Commercial Entity"
    },
    "commercial_company_name": {
        "type": "char",
        "string": "Company Name Entity"
    },
    "company_name": {
        "type": "char",
        "string": "Company Name"
    },
    "barcode": {
        "type": "char",
        "help": "Use a barcode to identify this contact.",
        "string": "Barcode"
    },
    "self": {
        "type": "many2one",
        "string": "Self"
    },
    "child_ids": {
        "type": "one2many",
        "string": "Contact"
    },
    "affiliate_ids": {
        "type": "one2many",
        "string": "Affiliates"
    },
    "im_status": {
        "type": "char",
        "string": "IM Status"
    },
    "birthdate_date": {
        "type": "date",
        "string": "Birthdate"
    },
    "age": {
        "type": "integer",
        "string": "Age"
    },
    "gender": {
        "type": "selection",
        "string": "Gender"
    },
    "nationality_id": {
        "type": "many2one",
        "string": "Nationality"
    },
    "activity_ids": {
        "type": "one2many",
        "string": "Activities"
    },
    "activity_state": {
        "type": "selection",
        "help": "Status based on activities\nOverdue: Due date is already passed\nToday: Activity date is today\nPlanned: Future activities.",
        "string": "Activity State"
    },
    "activity_user_id": {
        "type": "many2one",
        "string": "Responsible User"
    },
    "activity_type_id": {
        "type": "many2one",
        "string": "Next Activity Type"
    },
    "activity_type_icon": {
        "type": "char",
        "help": "Font awesome icon e.g. fa-tasks",
        "string": "Activity Type Icon"
    },
    "activity_date_deadline": {
        "type": "date",
        "string": "Next Activity Deadline"
    },
    "my_activity_date_deadline": {
        "type": "date",
        "string": "My Activity Deadline"
    },
    "activity_summary": {
        "type": "char",
        "string": "Next Activity Summary"
    },
    "activity_exception_decoration": {
        "type": "selection",
        "help": "Type of the exception activity on record.",
        "string": "Activity Exception Decoration"
    },
    "activity_exception_icon": {
        "type": "char",
        "help": "Icon to indicate an exception activity.",
        "string": "Icon"
    },
    "message_is_follower": {
        "type": "boolean",
        "string": "Is Follower"
    },
    "message_follower_ids": {
        "type": "one2many",
        "string": "Followers"
    },
    "message_partner_ids": {
        "type": "many2many",
        "string": "Followers (Partners)"
    },
    "message_channel_ids": {
        "type": "many2many",
        "string": "Followers (Channels)"
    },
    "message_ids": {
        "type": "one2many",
        "string": "Messages"
    },
    "message_unread": {
        "type": "boolean",
        "help": "If checked, new messages require your attention.",
        "string": "Unread Messages"
    },
    "message_unread_counter": {
        "type": "integer",
        "help": "Number of unread messages",
        "string": "Unread Messages Counter"
    },
    "message_needaction": {
        "type": "boolean",
        "help": "If checked, new messages require your attention.",
        "string": "Action Needed"
    },
    "message_needaction_counter": {
        "type": "integer",
        "help": "Number of messages which requires an action",
        "string": "Number of Actions"
    },
    "message_has_error": {
        "type": "boolean",
        "help": "If checked, some messages have a delivery error.",
        "string": "Message Delivery error"
    },
    "message_has_error_counter": {
        "type": "integer",
        "help": "Number of messages with delivery error",
        "string": "Number of errors"
    },
    "message_attachment_count": {
        "type": "integer",
        "string": "Attachment Count"
    },
    "message_main_attachment_id": {
        "type": "many2one",
        "string": "Main Attachment"
    },
    "email_normalized": {
        "type": "char",
        "help": "This field is used to search on email address as the primary email field can contain more than strictly an email address.",
        "string": "Normalized Email"
    },
    "is_blacklisted": {
        "type": "boolean",
        "help": "If the email address is on the blacklist, the contact won't receive mass mailing anymore, from any list",
        "string": "Blacklist"
    },
    "message_bounce": {
        "type": "integer",
        "help": "Counter of the number of bounced emails for this contact",
        "string": "Bounce"
    },
    "email": {
        "type": "char",
        "string": "Email"
    },
    "phone": {
        "type": "char",
        "string": "Phone"
    },
    "channel_ids": {
        "type": "many2many",
        "string": "Channels"
    },
    "user_id": {
        "type": "many2one",
        "help": "The internal user in charge of this contact.",
        "string": "Salesperson"
    },
    "firstname": {
        "type": "char",
        "string": "First name"
    },
    "lastname": {
        "type": "char",
        "string": "Last name"
    },
    "name": {
        "type": "char",
        "string": "Name"
    },
    "contact_address_complete": {
        "type": "char",
        "string": "Contact Address Complete"
    },
    "image_medium": {
        "type": "binary",
        "string": "Medium-sized image"
    },
    "signup_token": {
        "type": "char",
        "string": "Signup Token"
    },
    "signup_type": {
        "type": "char",
        "string": "Signup Token Type"
    },
    "signup_expiration": {
        "type": "datetime",
        "string": "Signup Expiration"
    },
    "signup_valid": {
        "type": "boolean",
        "string": "Signup Token is Valid"
    },
    "signup_url": {
        "type": "char",
        "string": "Signup URL"
    },
    "calendar_last_notif_ack": {
        "type": "datetime",
        "string": "Last notification marked as read from base Calendar"
    },
    "plan_to_change_car": {
        "type": "boolean",
        "string": "Plan To Change Car"
    },
    "phone_sanitized": {
        "type": "char",
        "help": "Field used to store sanitized phone number. Helps speeding up searches and comparisons.",
        "string": "Sanitized Number"
    },
    "phone_sanitized_blacklisted": {
        "type": "boolean",
        "help": "If the sanitized phone number is on the blacklist, the contact won't receive mass mailing sms anymore, from any list",
        "string": "Phone Blacklisted"
    },
    "phone_blacklisted": {
        "type": "boolean",
        "help": "Indicates if a blacklisted sanitized phone number is a phone number. Helps distinguish which number is blacklisted             when there is both a mobile and phone field in a model.",
        "string": "Blacklisted Phone is Phone"
    },
    "mobile_blacklisted": {
        "type": "boolean",
        "help": "Indicates if a blacklisted sanitized phone number is a mobile number. Helps distinguish which number is blacklisted             when there is both a mobile and phone field in a model.",
        "string": "Blacklisted Phone Is Mobile"
    },
    "property_product_pricelist": {
        "type": "many2one",
        "help": "This pricelist will be used, instead of the default one, for sales to the current partner",
        "string": "Pricelist"
    },
    "is_driver": {
        "type": "boolean",
        "string": "Is Driver?"
    },
    "ocn_token": {
        "type": "char",
        "help": "Used for sending notification to registered devices",
        "string": "OCN Token"
    },
    "website_message_ids": {
        "type": "one2many",
        "help": "Website communication history",
        "string": "Website Messages"
    },
    "message_has_sms_error": {
        "type": "boolean",
        "help": "If checked, some messages have a delivery error.",
        "string": "SMS Delivery error"
    },
    "driver_amount": {
        "type": "integer",
        "help": "Rides Value",
        "string": "# Rides"
    },
    "statement_count": {
        "type": "integer",
        "help": "Number of statements",
        "string": "# Statement"
    },
    "event_count": {
        "type": "integer",
        "help": "Number of events the partner has participated.",
        "string": "# Events"
    },
    "credit": {
        "type": "monetary",
        "help": "Total amount this customer owes you.",
        "string": "Total Receivable"
    },
    "debit": {
        "type": "monetary",
        "help": "Total amount you have to pay to this vendor.",
        "string": "Total Payable"
    },
    "debit_limit": {
        "type": "monetary",
        "string": "Payable Limit"
    },
    "total_invoiced": {
        "type": "monetary",
        "string": "Total Invoiced"
    },
    "currency_id": {
        "type": "many2one",
        "help": "Utility field to express amount currency",
        "string": "Currency"
    },
    "journal_item_count": {
        "type": "integer",
        "string": "Journal Items"
    },
    "property_account_payable_id": {
        "type": "many2one",
        "help": "This account will be used instead of the default one as the payable account for the current partner",
        "string": "Account Payable"
    },
    "property_account_receivable_id": {
        "type": "many2one",
        "help": "This account will be used instead of the default one as the receivable account for the current partner",
        "string": "Account Receivable"
    },
    "property_account_position_id": {
        "type": "many2one",
        "help": "The fiscal position determines the taxes/accounts used for this contact.",
        "string": "Fiscal Position"
    },
    "property_payment_term_id": {
        "type": "many2one",
        "help": "This payment term will be used instead of the default one for sales orders and customer invoices",
        "string": "Customer Payment Terms"
    },
    "property_supplier_payment_term_id": {
        "type": "many2one",
        "help": "This payment term will be used instead of the default one for purchase orders and vendor bills",
        "string": "Vendor Payment Terms"
    },
    "ref_company_ids": {
        "type": "one2many",
        "string": "Companies that refers to partner"
    },
    "has_unreconciled_entries": {
        "type": "boolean",
        "help": "The partner has at least one unreconciled debit and credit since last time the invoices & payments matching was performed.",
        "string": "Has Unreconciled Entries"
    },
    "last_time_entries_checked": {
        "type": "datetime",
        "help": "Last time the invoices & payments matching was performed for this partner. It is set either if there's not at least an unreconciled debit and an unreconciled credit or if you click the \"Done\" button.",
        "string": "Latest Invoices & Payments Matching Date"
    },
    "invoice_ids": {
        "type": "one2many",
        "string": "Invoices"
    },
    "contract_ids": {
        "type": "one2many",
        "string": "Partner Contracts"
    },
    "bank_account_count": {
        "type": "integer",
        "string": "Bank"
    },
    "trust": {
        "type": "selection",
        "string": "Degree of trust you have in this debtor"
    },
    "invoice_warn": {
        "type": "selection",
        "help": "Selecting the \"Warning\" option will notify user with the message, Selecting \"Blocking Message\" will throw an exception with the message and block the flow. The Message has to be written in the next field.",
        "string": "Invoice"
    },
    "invoice_warn_msg": {
        "type": "text",
        "string": "Message for Invoice"
    },
    "supplier_rank": {
        "type": "integer",
        "string": "Supplier Rank"
    },
    "customer_rank": {
        "type": "integer",
        "string": "Customer Rank"
    },
    "team_id": {
        "type": "many2one",
        "help": "If set, this Sales Team will be used for sales and assignments related to this partner",
        "string": "Sales Team"
    },
    "opportunity_ids": {
        "type": "one2many",
        "string": "Opportunities"
    },
    "meeting_ids": {
        "type": "many2many",
        "string": "Meetings"
    },
    "opportunity_count": {
        "type": "integer",
        "string": "Opportunity"
    },
    "meeting_count": {
        "type": "integer",
        "string": "# Meetings"
    },
    "document_count": {
        "type": "integer",
        "string": "Document Count"
    },
    "is_seo_optimized": {
        "type": "boolean",
        "string": "SEO optimized"
    },
    "website_meta_title": {
        "type": "char",
        "string": "Website meta title"
    },
    "website_meta_description": {
        "type": "text",
        "string": "Website meta description"
    },
    "website_meta_keywords": {
        "type": "char",
        "string": "Website meta keywords"
    },
    "website_meta_og_img": {
        "type": "char",
        "string": "Website opengraph image"
    },
    "seo_name": {
        "type": "char",
        "string": "Seo name"
    },
    "website_id": {
        "type": "many2one",
        "help": "Restrict publishing to this website.",
        "string": "Website"
    },
    "is_published": {
        "type": "boolean",
        "string": "Is Published"
    },
    "can_publish": {
        "type": "boolean",
        "string": "Can Publish"
    },
    "website_url": {
        "type": "char",
        "help": "The full URL to access the document through the website.",
        "string": "Website URL"
    },
    "website_published": {
        "type": "boolean",
        "string": "Visible on current website"
    },
    "visitor_ids": {
        "type": "one2many",
        "string": "Visitors"
    },
    "property_payment_method_id": {
        "type": "many2one",
        "help": "Preferred payment method when paying this vendor. This is used to filter vendor bills by preferred payment method to register payments in mass. Use cases: create bank files for batch wires, check runs.",
        "string": "Payment Method"
    },
    "online_partner_vendor_name": {
        "type": "char",
        "help": "Technical field used to store information from plaid/yodlee to match partner (used when a purchase is made)",
        "string": "Online Partner Vendor Name"
    },
    "online_partner_bank_account": {
        "type": "char",
        "help": "Technical field used to store information from plaid/yodlee to match partner",
        "string": "Online Partner Bank Account"
    },
    "payment_token_ids": {
        "type": "one2many",
        "string": "Payment Tokens"
    },
    "payment_token_count": {
        "type": "integer",
        "string": "Count Payment Token"
    },
    "property_purchase_currency_id": {
        "type": "many2one",
        "help": "This currency will be used, instead of the default one, for purchases from the current partner",
        "string": "Supplier Currency"
    },
    "purchase_order_count": {
        "type": "integer",
        "string": "Purchase Order Count"
    },
    "supplier_invoice_count": {
        "type": "integer",
        "string": "# Vendor Bills"
    },
    "purchase_warn": {
        "type": "selection",
        "help": "Selecting the \"Warning\" option will notify user with the message, Selecting \"Blocking Message\" will throw an exception with the message and block the flow. The Message has to be written in the next field.",
        "string": "Purchase Order"
    },
    "purchase_warn_msg": {
        "type": "text",
        "string": "Message for Purchase Order"
    },
    "receipt_reminder_email": {
        "type": "boolean",
        "help": "Automatically send a confirmation email to the vendor X days before the expected receipt date, asking him to confirm the exact date.",
        "string": "Receipt Reminder"
    },
    "reminder_date_before_receipt": {
        "type": "integer",
        "help": "Number of days to send reminder email before the promised receipt date",
        "string": "Days Before Receipt"
    },
    "website_description": {
        "type": "html",
        "string": "Website Partner Full Description"
    },
    "website_short_description": {
        "type": "text",
        "string": "Website Partner Short Description"
    },
    "online_partner_information": {
        "type": "char",
        "string": "Online Partner Information"
    },
    "supplier_payment_mode_id": {
        "type": "many2one",
        "help": "Select the default payment mode for this supplier.",
        "string": "Supplier Payment Mode"
    },
    "customer_payment_mode_id": {
        "type": "many2one",
        "help": "Select the default payment mode for this customer.",
        "string": "Customer Payment Mode"
    },
    "siret": {
        "type": "char",
        "string": "SIRET"
    },
    "sale_order_count": {
        "type": "integer",
        "string": "Sale Order Count"
    },
    "sale_order_ids": {
        "type": "one2many",
        "string": "Sales Order"
    },
    "sale_warn": {
        "type": "selection",
        "help": "Selecting the \"Warning\" option will notify user with the message, Selecting \"Blocking Message\" will throw an exception with the message and block the flow. The Message has to be written in the next field.",
        "string": "Sales Warnings"
    },
    "sale_warn_msg": {
        "type": "text",
        "string": "Message for Sales Order"
    },
    "payment_next_action_date": {
        "type": "date",
        "help": "The date before which no action should be taken.",
        "string": "Next Action Date"
    },
    "unreconciled_aml_ids": {
        "type": "one2many",
        "string": "Unreconciled Aml"
    },
    "unpaid_invoices": {
        "type": "one2many",
        "string": "Unpaid Invoices"
    },
    "total_due": {
        "type": "monetary",
        "string": "Total Due"
    },
    "total_overdue": {
        "type": "monetary",
        "string": "Total Overdue"
    },
    "followup_status": {
        "type": "selection",
        "string": "Follow-up Status"
    },
    "followup_level": {
        "type": "many2one",
        "string": "Follow-up Level"
    },
    "payment_responsible_id": {
        "type": "many2one",
        "help": "Optionally you can assign a user to this field, which will make him responsible for the action.",
        "string": "Follow-up Responsible"
    },
    "sdd_mandate_ids": {
        "type": "one2many",
        "help": "Every mandate belonging to this partner.",
        "string": "Sdd Mandate"
    },
    "sdd_count": {
        "type": "integer",
        "string": "SDD count"
    },
    "company_group_id": {
        "type": "many2one",
        "string": "Company group"
    },
    "last_website_so_id": {
        "type": "many2one",
        "string": "Last Online Sales Order"
    },
    "subscription_count": {
        "type": "integer",
        "string": "Subscriptions"
    },
    "loan_count": {
        "type": "integer",
        "string": "Loan Count"
    },
    "is_subscriber": {
        "type": "boolean",
        "string": "Is subscriber"
    },
    "subscriber_in": {
        "type": "date",
        "string": "Date start"
    },
    "subscriber_out": {
        "type": "date",
        "string": "Date end"
    },
    "is_subscriber_active": {
        "type": "boolean",
        "string": "Present"
    },
    "subscriber_out_reason_id": {
        "type": "many2one",
        "string": "Out Reason"
    },
    "comment_for_operator": {
        "type": "text",
        "string": "Comment for operator"
    },
    "comment_for_driver": {
        "type": "text",
        "string": "Comment for driver"
    },
    "subscriber_account_setting": {
        "type": "many2one",
        "string": "Account settings"
    },
    "subscriber_code_int": {
        "type": "integer",
        "string": "Subscriber code"
    },
    "subscriber_code_str": {
        "type": "char",
        "string": "Code"
    },
    "is_subscriber_error": {
        "type": "boolean",
        "string": "Is error management subscriber"
    },
    "driver_type_id": {
        "type": "many2one",
        "string": "Driver type"
    },
    "driver_no": {
        "type": "char",
        "string": "Driver Number"
    },
    "parking_no": {
        "type": "char",
        "string": "Parking Number"
    },
    "legal_status_ids": {
        "type": "one2many",
        "string": "Legal Status"
    },
    "bgt_in": {
        "type": "date",
        "string": "BGT In"
    },
    "bgt_out": {
        "type": "date",
        "string": "BGT Out"
    },
    "bgt_active": {
        "type": "boolean",
        "string": "BGT Active"
    },
    "exploit_in": {
        "type": "date",
        "string": "Exploit In"
    },
    "exploit_out": {
        "type": "date",
        "string": "Exploit Out"
    },
    "exploit_active": {
        "type": "boolean",
        "string": "Exploit Active"
    },
    "alpha_in": {
        "type": "date",
        "string": "Alpha Taxis In"
    },
    "alpha_out": {
        "type": "date",
        "string": "Alpha Taxis Out"
    },
    "alpha_active": {
        "type": "boolean",
        "string": "Alpha Taxis Active"
    },
    "muta_in": {
        "type": "date",
        "string": "Mutacop In"
    },
    "muta_out": {
        "type": "date",
        "string": "Mutacop Out"
    },
    "muta_active": {
        "type": "boolean",
        "string": "Mutacop Active"
    },
    "birth_zip": {
        "type": "char",
        "string": "Birthday ZIP"
    },
    "birth_city": {
        "type": "char",
        "string": "Birth City"
    },
    "birth_country_id": {
        "type": "many2one",
        "string": "Birth Country"
    },
    "emergency_contact": {
        "type": "text",
        "string": "Person to contact"
    },
    "children": {
        "type": "text",
        "string": "Children"
    },
    "ssn_no": {
        "type": "char",
        "string": "Social Welfare Number"
    },
    "insurance_no": {
        "type": "char",
        "string": "Insurance Number"
    },
    "insurance_coeff": {
        "type": "float",
        "string": "Insurance Coefficient"
    },
    "certificate_no": {
        "type": "char",
        "string": "Certificate Number"
    },
    "certificate_date": {
        "type": "date",
        "string": "Certificate Date"
    },
    "certificate_validity_end_date": {
        "type": "date",
        "string": "Certificate Validity End Date"
    },
    "licence_no": {
        "type": "char",
        "string": "Licence Number"
    },
    "licence_date": {
        "type": "date",
        "string": "Licence Date"
    },
    "licence_issuer": {
        "type": "char",
        "string": "Licence Issued by"
    },
    "identification_type_id": {
        "type": "many2one",
        "string": "Identification Type"
    },
    "identification_no": {
        "type": "char",
        "string": "Identification Number"
    },
    "identification_date": {
        "type": "date",
        "string": "Identification Date"
    },
    "identification_issuer": {
        "type": "char",
        "string": "Identification Issuer"
    },
    "work_pension": {
        "type": "boolean",
        "string": "Work Pension"
    },
    "work_pension_start_date": {
        "type": "date",
        "string": "Work pension Start Date"
    },
    "marital_status_id": {
        "type": "many2one",
        "string": "Marital Status"
    },
    "driver_counter_ids": {
        "type": "one2many",
        "string": "Driver Counter"
    },
    "alpha_taxis_ids": {
        "type": "one2many",
        "string": "Alpha Taxis"
    },
    "code_ids": {
        "type": "one2many",
        "string": "Code"
    },
    "driver_siret": {
        "type": "char",
        "string": "SIRET"
    },
    "shares_coop_id": {
        "type": "many2one",
        "string": "Cooperative"
    },
    "shares_no_n_license": {
        "type": "char",
        "string": "Shares Number License Number"
    },
    "shares_no_n_counter": {
        "type": "char",
        "string": "Shares Number License Counter"
    },
    "shares_qty": {
        "type": "float",
        "string": "Shares Quantity"
    },
    "shares_amount": {
        "type": "float",
        "string": "Shares Amount"
    },
    "radio_code": {
        "type": "char",
        "string": "Radio Code"
    },
    "out_reason_id": {
        "type": "many2one",
        "string": "Out Reason"
    },
    "address_history_ids": {
        "type": "one2many",
        "string": "Address History"
    },
    "vehicle_id": {
        "type": "many2one",
        "string": "Vehicle"
    },
    "driver_firstname": {
        "type": "char",
        "string": "Firstname"
    },
    "driver_lastname": {
        "type": "char",
        "string": "Lastname"
    },
    "fleet_assignation_log_ids": {
        "type": "one2many",
        "string": "Fleet Assignation Log"
    },
    "partner_company_type_id": {
        "type": "many2one",
        "string": "Legal Form"
    },
    "is_driver_rent_vehicle": {
        "type": "boolean",
        "string": "Is relay on going"
    },
    "image_1920": {
        "type": "binary",
        "string": "Image"
    },
    "image_1024": {
        "type": "binary",
        "string": "Image 1024"
    },
    "image_512": {
        "type": "binary",
        "string": "Image 512"
    },
    "image_256": {
        "type": "binary",
        "string": "Image 256"
    },
    "image_128": {
        "type": "binary",
        "string": "Image 128"
    },
    "id": {
        "type": "integer",
        "string": "ID"
    },
    "create_uid": {
        "type": "many2one",
        "string": "Created by"
    },
    "create_date": {
        "type": "datetime",
        "string": "Created on"
    },
    "write_uid": {
        "type": "many2one",
        "string": "Last Updated by"
    },
    "write_date": {
        "type": "datetime",
        "string": "Last Updated on"
    },
    "__last_update": {
        "type": "datetime",
        "string": "Last Modified on"
    },
    "x_studio_x_lastupdatedate_flow": {
        "type": "datetime",
        "string": "x_lastupdatedate_flow_driver"
    },
    "x_studio_date_modif": {
        "type": "char",
        "string": "date modif"
    },
    "x_studio_many2many_field_jvwRA": {
        "type": "many2many",
        "string": "\u00c9tiquettes"
    },
    "x_studio_many2many_field_0Xo88": {
        "type": "many2many",
        "string": "\u00c9tiquettes"
    }
}